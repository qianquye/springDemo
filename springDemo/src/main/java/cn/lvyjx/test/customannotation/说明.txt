自定义注解
  1、定义注解与接口相似，但它需要在接口关键字前另一个@字符
     格式如下
      public @interface test{
                    定义体 
      }
      
  2、注解方法不能有参数
  3、注解方法的返回类型局限于基本类型（int,float,short,boolean,byte,double,char,long），字符串(String)，枚举(enum)，注解(annotation)或以上的类型构成的数组
  4、注解方法可以包含默认值
  5、访问权修饰只能用public或默认default
  5、注解中回种元注解类型：
    5.1、@Documented - 是标记注解，即没有成员的注解。表示使用该注解的元素被javadoc或类似的工具文档化。它应用于类型声明，类型声明
         的注解会影响客户端对注解元素的使用。如果一个类型声明添加了Documented注解，那么它的注解会成功被注解元素的公共API的一部分。
         
    5.2、@Target 表示支持注解的程序元素的种类，接收ElementType参数值，一些可能的值 有TYPE,METHOD,CONSTRUCTOR,FIELD等等，
     如果Target元注解不存在，那么该注解就可以使用在任何程序元素之上。
       如：@Target(ElementType.TYPE)
       1.CONSTRUCTOR 用于描述构造器的
       2.FIELD 用于描述域（类的成员变量）
       3.LOCAL_VARIABLE 用于描述局部变量（方法内部变量）
       4.METHOD 用于描述方法
       5.PACKAGE 用于描述包
       6.PARAMETER 用于描述参数
       7.TYPE 用于描述类，接口（包括注解类型)或enum声明
       
    5.3、@Inherited 是标记注解，它的作用是被它的标注的类型是可被继承的，比如一个class被@Inherited标记，那么一个子类继承该class后，这个annotation将用于该class的子类。
               表示支持注解的程序元素会被自动继承，如果用户在类声明的时候查询注解类型，同时类声明中也没有这个类型的注解，那么注解类型会自动查询该类的父类，这个过程将会不停地重复，
               直到该类型的注解被找到为止，或是到达类结构的顶层（Object).
    
    5.4、@Retention 表示注解类型保留时间的长短，它接收RetentionPolicy参数，可能的值有source,class，以及runtime.
        如：@Retention(RetentionPolicy.RUNTIME)
        1.SOURCE 在源文件中有效（即源文件保留）
        2.CLASS 在class文件中有效（即class保留）
        3.RUNTIME 在运行时有效（即运行时保留）
 